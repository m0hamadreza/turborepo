/* do not change this file, it is auto generated by storybook. */
import { start, updateView, View } from '@storybook/react-native';

import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";
import "@storybook/addon-ondevice-notes/register";
import "storybook-addon-deep-controls/register";
import "./local-addon-example/register";

const normalizedStories = [
  {
    titlePrefix: "",
    directory: "./components",
    files: "**/*.stories.?(ts|tsx|js|jsx)",
    importPathMatcher: /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/,
    // @ts-ignore
    req: require.context(
      '../components',
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  },
{
    titlePrefix: "",
    directory: "./other_components",
    files: "**/*.stories.?(ts|tsx|js|jsx)",
    importPathMatcher: /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/,
    // @ts-ignore
    req: require.context(
      '../other_components',
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  },
{
    titlePrefix: "react-native-ui",
    directory: "../../packages/react-native-ui",
    files: "**/*.stories.?(ts|tsx|js|jsx)",
    importPathMatcher: /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/,
    // @ts-ignore
    req: require.context(
      '../../../packages/react-native-ui',
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  }
];


declare global {
  var view: View;
  var STORIES: typeof normalizedStories;
}


const annotations = [
  require('./preview'),
  require("@storybook/react-native/preview"),
  require('storybook-addon-deep-controls/preview'),
  require('./local-addon-example/preview')
];

global.STORIES = normalizedStories;

// @ts-ignore
module?.hot?.accept?.();

const options = {
    "playFn": false
}

if (!global.view) {
  global.view = start({
    annotations,
    storyEntries: normalizedStories,
    options,
  });
} else {
  updateView(global.view, annotations, normalizedStories, options);
}

export const view: View = global.view;
